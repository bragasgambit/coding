Rust requirements
https://youtu.be/EYCBm0xAWow?si=YcwJLoQpOW9dDX_m

Understand cern CS (Computational Science) concepts:

Memory regions available to its program:
- stack
- heap
- static memory

- How memory allocation and deallocation works?
- Manual memory management vs garbage collection
- How concurrency and parallelism works?
- Concepts of multi-threading, synchronization and parallel processing (important when working with rust concurrency features)

- Compiled vs interpreted languages

- Basic understanding in Object-oriented programming (OOP) and functional programming

--
Those will help to understand when programming in rust
tradeoffs
feature sets
error messages

Low-level languages: Rust, C & C++
- references
- raw pointers
- smart pointers
- RAII pattern in C++
- Zero-cost abstractions (principle)
- Dynamic vs static dispatch
- Virtual tables
- Return codes and exceptions (error handling)


#2 - Learning resources
- Harvard CS50 on Youtube - Intro to CS
- Documentation of Rust (Rust Lang Book)

Deep dive:
- Jon Gjengset YouTube channel (Crust of Rust playlist) and Book (Rust for rustaceans)


- Zero to production in Rust - Luca Palmieri Book
